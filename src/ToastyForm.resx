<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>